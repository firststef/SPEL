[TEST] Example Program:
The tale begins.

points spell functie2 sacrifice time :
	craft points a .
	cast 4.
terminus

I summon thy name Link
	craft points life_points bestow 5.
	craft precise mana_points.
	craft rune armor_enchantments.
	craft absolute mortality.
	craft tome allegiance bestow "Zelda".

	void spell functie3 sacrifice time :
		craft points a .
	terminus

and thy brethren.

[END]

[TEST] Null program:
The tale begins.
[END]

[TEST] Comentarii:
The tale begins.
/* comentariu cu text intern
pe mai multe
linii*/
/**/
//
[END]

[TEST] Predefined types variable declarations:
The tale begins.
craft points a.
craft precise b.
craft rune v.
craft tome str.
craft absolute bolean.
[END]

[TEST] Variable init:
The tale begins.
craft points a bestow 1.
craft precise d bestow 1.0.
craft rune v bestow 'a'.
craft tome str bestow "a".
craft absolute bolean bestow true.
[END]

[TEST] Const declarations:
The tale begins.
craft artifact points kst1 bestow 1.
craft artifact precise kst2 bestow 1.1.
craft artifact rune kst3 bestow 'a'.
craft artifact tome kst4 bestow "kst4".
craft artifact points vkst[3] bestow [1, 3, 1].
[END]

[TEST] Vector declarations:
The tale begins.

I summon thy name clasa1
	craft points a.
and thy brethren.

craft points a1[].
craft precise b1[].
craft rune v1[].
craft tome str1[].
craft absolute bol1[].
craft clasa1 obj1[].
[END]

[TEST][SHOULD FAIL] Variables must be defined before:
The tale begins.
craft points b bestow a.
[END]

[TEST][SHOULD FAIL] Duplicate variable error:
The tale begins.
craft points a.
craft points a bestow 1.
[END]

[TEST][SHOULD FAIL] Variables must be intialized before:
The tale begins.
craft points a.
craft points b bestow a.
[END]

[TEST] Functions declaration:
The tale begins.

points spell man sacrifice points a, points b:
	//cast a + b * 3. parametrii nu pot fi folositi pentru ca nu au fost initializati
	cast 4.
terminus

points spell functie sacrifice time :
	craft precise b bestow 55.0*3.0/2.0.
	craft tome str bestow "string1"+"string2".
	cast 0.
terminus

[END]

[TEST][SHOULD FAIL] Duplicate function error - same signature :
The tale begins.

points spell functie2 sacrifice time :
	craft points a .
	cast 4.
terminus

points spell functie2 sacrifice time :
	craft points a .
	cast 4.
terminus
[END]

[TEST] Duplicate function - same name, different signature :
The tale begins.

points spell functie2 sacrifice precise mana :
	craft points a .
	cast 4.
terminus

points spell functie2 sacrifice time :
	craft points a .
	cast 4.
terminus
[END]


[TEST][SHOULD FAIL] Illegal return function error - type:
The tale begins.

points spell functie2 sacrifice time :
	craft points a .
	cast "a".
terminus
[END]

[TEST][SHOULD FAIL] Illegal return function error - void:
The tale begins.

void spell functie2 sacrifice time :
	if (true)
		cast 0.
	endif

	cast "a". //cast not allowed in void f
terminus
[END]

[TEST][SHOULD FAIL] Illegal return function error - inside statement:
The tale begins.

void spell functie2 sacrifice time :
	if (true)
		if (true)
			cast 0.
		endif
	endif
terminus
[END]

[TEST] Illegal return function - inside statement:
The tale begins.

void spell functie2 sacrifice time :
	if (true)
		if (true)
			cast time.
		endif
	endif
	//cast time.
terminus
[END]

[TEST] Function calls:
The tale begins.

craft points a bestow 3.

points spell functie sacrifice points p :
	cast 3.
terminus

points spell man sacrifice points life :
	cast 4.
terminus

chant functie sacrifice 45 :.
chant functie sacrifice 3+4:.
chant functie sacrifice chant man sacrifice 1+3 :: .
[END]

[TEST][SHOULD FAIL] Functions must be defined before use:

craft points a bestow chant functie sacrifice 3:.

[END]

[TEST][SHOULD FAIL] Assignment should have the same type error :
The tale begins.

craft points a bestow "a".
[END]

[TEST][SHOULD FAIL] Functions call parameters should have the same type :
The tale begins.

points spell functie sacrifice points p :
	cast 3.
terminus

chant functie sacrifice "a" :.

[END]

[TEST] Return in main:
The tale begins.
if (true)
	cast 0.
endif
cast 1.
[END]

[TEST][SHOULD FAIL] Empty class:
The tale begins.
I summon thy name clasa1
and thy brethren.
[END]

[TEST] Class Declarations:
The tale begins.

I summon thy name clasa2
	void spell functie2 sacrifice time :
		craft rune sir[4] bestow ['1', 'a', 'c', '4'].
		craft points a bestow 100.
	terminus

	void spell functie_void_cu_return sacrifice time :
		craft precise c bestow 1.1.
	terminus

	tome spell functie_cu_return sacrifice tome a, artifact rune b[]:
		craft artifact precise vec[5] bestow [1.0,4.0,5.0,2.0,3.0].
		cast "done".
	terminus
and thy brethren.

I summon thy name clasa3
	void spell functie4 sacrifice time:
		craft rune sir[4] bestow ['1', 'a', '2', '4'].
		craft points a.
	terminus

	craft points x.

	void spell functie_void_cu_return2 sacrifice time :
		craft precise c bestow 1.1.
	terminus

	craft absolute variabila[2] bestow [true, false].
and thy brethren.
[END]

[TEST] Class instantiation:
The tale begins.

I summon thy name clasa1
	craft points a bestow 1.
and thy brethren.

craft clasa1 obj.
[END]

[TEST][SHOULD FAIL] Duplicate class error:
The tale begins.

I summon thy name Link
	craft points life_points bestow 5.
and thy brethren.

I summon thy name Link
	craft points life_points bestow 5.
and thy brethren.
[END]

[TEST] Conditionals & Arithmetic:
The tale begins.
craft absolute a bestow true.
craft points b bestow 1.

void spell functie sacrifice points n :
	craft precise c bestow 1.1.
terminus

if (a && (b != 0))
	chant functie sacrifice 1:.
endif
else
	chant functie sacrifice 1:.
endelse
[END]

[TEST] While Loops:
The tale begins.
craft precise c bestow 1.1.
craft points b bestow 1.
void spell functie sacrifice points n :
	craft precise d bestow 1.1.
terminus

while (c >= 0.0 && (b!=0))
	craft points a bestow 0.
	craft tome str1[1] bestow ["wow"].
	chant functie sacrifice 45:.
endwhile
[END]

[TEST] For loops:
The tale begins.

for (x in 1:30) //for (points x=1. x<=30. x++)
	craft points b.
endfor

[END]

[TEST] Array element assign:
The tale begins.
craft points v[10].
enchant v[5] with 4.
[END]

[TEST] Of operator:
The tale begins.
enchant life_points of clone with 100.
[END]

[TEST][SHOULD FAIL] List instantiation on a single unit:
The tale begins.
craft tome str bestow "string1"+"string2","asas".
[END]

[TEST][SHOULD FAIL] Arithmetic operations vs boolean operations:
The tale begins.
if ((2 + 3) == (2 < 3))
	craft artifact points ii bestow 0.
endif
[END]


[TEST][SHOULD FAIL] Const variables cannot be assigned to:
The tale begins.
craft artifact points a bestow 3.
enchant a with 4.

[END]


[TEST] Eval function:
The tale begins.
EVAL().
craft points a bestow 3 * 2.
EVAL(a).
EVAL(3).
[END]
[TEST] Eval expressions:
The tale begins.
EVAL(1 + 2).
[END]
[TEST][SHOULD FAIL] Non-int eval function float:
The tale begins.
EVAL(3.0).
[END]
[TEST][SHOULD FAIL] Non-int eval function string:
The tale begins.
EVAL("str").
[END]
[TEST][SHOULD FAIL] Non-int eval function multiple param:
The tale begins.
EVAL(1, 2).
[END]
[TEST][SHOULD FAIL] Non-int eval function expression:
The tale begins.
EVAL(enchant 1 with 2).
[END]

//craft points b[2] bestow [1,2].
//craft points aux bestow b[0].